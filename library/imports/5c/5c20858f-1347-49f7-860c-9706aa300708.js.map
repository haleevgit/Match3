{"version":3,"sources":["assets/scripts/Plugins/Input/InputCatcher.js"],"names":["cc","Class","Component","properties","direction","InputDirection","None","type","tooltip","target","analyticsArea","editor","menu","onEnable","_handleSubscription","onDisable","activated","func","node","Node","EventType","TOUCH_START","onDown","TOUCH_MOVE","onMove","TOUCH_END","onUp","TOUCH_CANCEL","event","systemEvent","emit","GameEvent","INPUT","InputType","Down","touch","Move","Up"],"mappings":";;;;;;AAAA;;AAEA;;AACA;;;;AAEA;AAEA;AAEAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACR;IACAC,SAAS,EAAE;MACP,WAASC,0BAAA,CAAeC,IADjB;MAEPC,IAAI,EAAEF,0BAFC;MAGPG,OAAO,EAAE;IAHF,CAFH;IAORC,MAAM,EAAE;MACJ,WAAS,IADL;MAEJF,IAAI,EAAEP,EAAE,CAACE,SAFL;MAGJM,OAAO,EAAE;IAHL,CAPA;IAaRE,aAAa,EAAE,EAbP,CAcR;IAEA;IACA;IAEA;IACA;;EApBQ,CAHP;EA0BLC,MAAM,EAAE;IACJC,IAAI,EAAE;EADF,CA1BH;EA8BL;EACAC,QA/BK,sBA+BM;IACP,KAAKC,mBAAL,CAAyB,IAAzB;EACH,CAjCI;EAmCLC,SAnCK,uBAmCO;IACR,KAAKD,mBAAL,CAAyB,KAAzB;EACH,CArCI;EAsCL;EAEA;EACA;EAEA;EACAA,mBA5CK,+BA4CeE,SA5Cf,EA4C0B;IAC3B,IAAMC,IAAI,GAAGD,SAAS,GAAG,IAAH,GAAU,KAAhC;IAEA,KAAKE,IAAL,CAAUD,IAAV,EAAgBjB,EAAE,CAACmB,IAAH,CAAQC,SAAR,CAAkBC,WAAlC,EAA+C,KAAKC,MAApD,EAA4D,IAA5D;IACA,KAAKJ,IAAL,CAAUD,IAAV,EAAgBjB,EAAE,CAACmB,IAAH,CAAQC,SAAR,CAAkBG,UAAlC,EAA8C,KAAKC,MAAnD,EAA2D,IAA3D;IACA,KAAKN,IAAL,CAAUD,IAAV,EAAgBjB,EAAE,CAACmB,IAAH,CAAQC,SAAR,CAAkBK,SAAlC,EAA6C,KAAKC,IAAlD,EAAwD,IAAxD;IACA,KAAKR,IAAL,CAAUD,IAAV,EAAgBjB,EAAE,CAACmB,IAAH,CAAQC,SAAR,CAAkBO,YAAlC,EAAgD,KAAKD,IAArD,EAA2D,IAA3D;EACH,CAnDI;EAoDL;EAEA;EACAJ,MAvDK,kBAuDEM,KAvDF,EAuDS;IACV5B,EAAE,CAAC6B,WAAH,CAAeC,IAAf,CAAoBC,qBAAA,CAAUC,KAA9B,EAAqCC,qBAAA,CAAUC,IAA/C,EAAqD,KAAK9B,SAA1D,EAAqEwB,KAAK,CAACO,KAA3E,EAAkF,IAAlF,EAAwF,KAAK1B,MAA7F;EACH,CAzDI;EA2DLe,MA3DK,kBA2DEI,KA3DF,EA2DS;IACV5B,EAAE,CAAC6B,WAAH,CAAeC,IAAf,CAAoBC,qBAAA,CAAUC,KAA9B,EAAqCC,qBAAA,CAAUG,IAA/C,EAAqD,KAAKhC,SAA1D,EAAqEwB,KAAK,CAACO,KAA3E,EAAkF,IAAlF,EAAwF,KAAK1B,MAA7F;EACH,CA7DI;EA+DLiB,IA/DK,gBA+DAE,KA/DA,EA+DO;IACR5B,EAAE,CAAC6B,WAAH,CAAeC,IAAf,CAAoBC,qBAAA,CAAUC,KAA9B,EAAqCC,qBAAA,CAAUI,EAA/C,EAAmD,KAAKjC,SAAxD,EAAmEwB,KAAK,CAACO,KAAzE,EAAgF,IAAhF,EAAsF,KAAK1B,MAA3F;EACH,CAjEI,CAmEL;;AAnEK,CAAT","sourceRoot":"/","sourcesContent":["import GameEvent from 'GameEvent';\n\nimport InputDirection from 'InputDirection';\nimport InputType from 'InputType';\n\n//#region classes-helpers\n\n//#endregion\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //#region editors fields and properties\n        direction: {\n            default: InputDirection.None,\n            type: InputDirection,\n            tooltip: 'место откуда пришел инпут, по энаму InputDirection',\n        },\n        target: {\n            default: null,\n            type: cc.Component,\n            tooltip: 'компонента, которая будет передана в команду. В команде можно будет использовать ее методы',\n        },\n\n        analyticsArea: '',\n        //#endregion\n\n        //#region public fields and properties\n        //#endregion\n\n        //#region private fields and properties\n        //#endregion\n    },\n\n    editor: {\n        menu: 'Input/InputCatcher',\n    },\n\n    //#region life-cycle callbacks\n    onEnable() {\n        this._handleSubscription(true);\n    },\n\n    onDisable() {\n        this._handleSubscription(false);\n    },\n    //#endregion\n\n    //#region public methods\n    //#endregion\n\n    //#region private methods\n    _handleSubscription(activated) {\n        const func = activated ? 'on' : 'off';\n\n        this.node[func](cc.Node.EventType.TOUCH_START, this.onDown, this);\n        this.node[func](cc.Node.EventType.TOUCH_MOVE, this.onMove, this);\n        this.node[func](cc.Node.EventType.TOUCH_END, this.onUp, this);\n        this.node[func](cc.Node.EventType.TOUCH_CANCEL, this.onUp, this);\n    },\n    //#endregion\n\n    //#region event handlers\n    onDown(event) {\n        cc.systemEvent.emit(GameEvent.INPUT, InputType.Down, this.direction, event.touch, this, this.target);\n    },\n\n    onMove(event) {\n        cc.systemEvent.emit(GameEvent.INPUT, InputType.Move, this.direction, event.touch, this, this.target);\n    },\n\n    onUp(event) {\n        cc.systemEvent.emit(GameEvent.INPUT, InputType.Up, this.direction, event.touch, this, this.target);\n    },\n\n    //#endregion\n});\n"]}