{"version":3,"sources":["assets/scripts/Game/GameObject/GameObjectManager.js"],"names":["cc","Class","Component","properties","PREVIEW","editorOnly","tooltip","gameObjectType","GameObjectType","None","type","notify","old","_convertGameObjectType","indexOf","push","_prefabs","prefab","oldIndex","oldPrefab","splice","serializable","Prefab","visible","prefabs","get","convertGameObjectType","_pools","editor","menu","onLoad","_initPools","systemEvent","on","GameEvent","CREATE_GAME_OBJECT","onCreateGameObject","getPrefab","getPrefabPool","pool","pg","poolManager","addComponent","PoolManager","forEach","index","array","poolForObject","preAction","callback","go","gon","pop","node","getComponent","GameObject","Function"],"mappings":"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","sourceRoot":"/","sourcesContent":["import GameEvent from 'GameEvent';\n\nimport GameObject from 'GameObject';\nimport GameObjectType from 'GameObjectType';\n\n//#region classes-helpers\n//#endregion\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //#region editors fields and properties\n        PREVIEW: {\n            default: false,\n            editorOnly: true,\n            tooltip: 'показать все типы объектов и префабы к ним',\n        },\n\n        gameObjectType: {\n            default: GameObjectType.None,\n            type: GameObjectType,\n            notify(old) {\n                if (this.gameObjectType !== GameObjectType.None) {\n                    if (this._convertGameObjectType.indexOf(this.gameObjectType) === -1) {\n                        this._convertGameObjectType.push(this.gameObjectType);\n                        this._prefabs.push(null);\n                    }\n                    this.prefab = this._prefabs[this._convertGameObjectType.indexOf(this.gameObjectType)];\n\n                    const oldIndex = this._convertGameObjectType.indexOf(old);\n\n                    if (oldIndex > -1) {\n                        const oldPrefab = this._prefabs[oldIndex];\n\n                        if (oldPrefab === null) {\n                            this._prefabs.splice(oldIndex, 1);\n                            this._convertGameObjectType.splice(oldIndex, 1);\n                        }\n                    }\n                }\n            },\n            serializable: false,\n            tooltip: 'тип объекта для привязки префаба',\n        },\n\n        prefab: {\n            default: null,\n            type: cc.Prefab,\n            notify() {\n                if (this.gameObjectType !== GameObjectType.None && (this.prefab instanceof cc.Prefab || this.prefab === null)) {\n                    this._prefabs[this._convertGameObjectType.indexOf(this.gameObjectType)] = this.prefab;\n                }\n            },\n            visible() {\n                return this.gameObjectType !== GameObjectType.None;\n            },\n            serializable: false,\n            tooltip: 'префаб для объекта',\n        },\n\n        prefabs: {\n            get() {\n                return this._prefabs;\n            },\n            type: [cc.Prefab],\n            visible() {\n                return this.PREVIEW;\n            },\n        },\n        convertGameObjectType: {\n            get() {\n                return this._convertGameObjectType;\n            },\n            type: [GameObjectType],\n            visible() {\n                return this.PREVIEW;\n            },\n        },\n        //#endregion\n\n        //#region public fields and properties\n        //#endregion\n\n        //#region private fields and properties\n        _pools: { default: null, serializable: false },\n        _prefabs: { default: [], type: [cc.Prefab] },\n        _convertGameObjectType: { default: [], type: [GameObjectType] },\n        //#endregion\n    },\n\n    editor: {\n        menu: 'GameObject/GameObjectManager',\n    },\n\n    //#region life-cycle callbacks\n    onLoad() {\n        this._initPools();\n\n        cc.systemEvent.on(GameEvent.CREATE_GAME_OBJECT, this.onCreateGameObject, this);\n    },\n    //#endregion\n\n    //#region public methods\n    getPrefab(gameObjectType) {\n        if (this.convertGameObjectType.indexOf(gameObjectType) !== -1) {\n            return this.prefabs[this.convertGameObjectType.indexOf(gameObjectType)];\n        }\n\n        return null;\n    },\n\n    getPrefabPool(gameObjectType) {\n        let pool = null;\n\n        if (this._pools[gameObjectType]) {\n            pool = this._pools[gameObjectType];\n        }\n\n        return pool;\n    },\n    //#endregion\n\n    //#region private methods\n    _initPools() {\n        this._pools = {};\n\n        if (!pg.poolManager) {\n            this.addComponent(pg.PoolManager);\n        }\n\n        this.prefabs.forEach((prefab, index, array) => {\n            if (prefab instanceof cc.Prefab) {\n                this._pools[this.convertGameObjectType[index]] = pg.poolManager.poolForObject(prefab);\n            }\n        });\n    },\n    //#endregion\n\n    //#region event handlers\n    onCreateGameObject(type, preAction, callback) {\n        const pool = this.getPrefabPool(type);\n\n        let go = null;\n        let gon = null;\n\n        if (pool) {\n            pool.pop((node) => {\n                gon = node;\n                go = node.getComponent(GameObject);\n\n                preAction instanceof Function && preAction(go, gon);\n            });\n        }\n\n        callback instanceof Function && callback(go, gon);\n    },\n    //#endregion\n});\n"]}