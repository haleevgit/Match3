{"version":3,"sources":["assets/scripts/Game/Ui/ScoreManager.js"],"names":["cc","Class","Component","properties","level","type","Label","steps","localScores","totalScores","progress","Node","_level","serializable","_steps","_localScores","_needingScores","_totalScores","_canCheckForScoresAbility","_isStopAdding","onEnable","_handleSubscription","_createNewLevel","string","onDisable","isOn","func","systemEvent","GameEvent","SCORE_GOT","onScoreGot","PLAYER_MOVED","onPlayerMoved","CHECK_SCORES_FOR_ABILITY","onCheckScoreForAbility","TOGGLE_SUPER_ABILITY","onToggleSuperAbility","SHOW_SCREEN","onShowScreen","Math","ceil","width","_checkForScores","scores","comparedValue","emit","BOMB_IS_AVAILABLE","UiScreenType","Result","pg","tweenManager","add","kindSuperAbility","isAvailable","BlockColorType","Bomb","Teleport","BombType","Tnt","CREATE_SUPER_ABILITY","typeScreen","isShow","isWin"],"mappings":"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","sourceRoot":"/","sourcesContent":["//#region classes-helpers\nimport GameEvent from 'GameEvent';\nimport UiScreenType from 'UiScreenType';\nimport BombType from 'BombType';\nimport BlockColorType from '../Enums/BlockColorType';\n//#endregion\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //#region editors fields and properties\n        level: { default: null, type: cc.Label },\n        steps: { default: null, type: cc.Label },\n        localScores: { default: null, type: cc.Label },\n        totalScores: { default: null, type: cc.Label },\n        progress: { default: null, type: cc.Node },\n\n        //#endregion\n\n        //#region public fields and properties\n        //#endregion\n\n        //#region private fields and properties\n        _level: { default: 0, serializable: false },\n        _steps: { default: 20 },\n        _localScores: { default: 40 },\n        _needingScores: { default: 0, serializable: false },\n        _totalScores: { default: 0 },\n        _canCheckForScoresAbility: { default: true },\n        _isStopAdding: { default: false },\n        //#endregion\n    },\n\n    //#region life-cycle callbacks\n    onEnable() {\n        this._handleSubscription(true);\n        this._createNewLevel();\n        this.totalScores.string = this._totalScores;\n    },\n\n    onDisable() {\n        this._handleSubscription(false);\n    },\n\n    //#endregion\n\n    //#region public methods\n    //#endregion\n\n    //#region private methods\n    _handleSubscription(isOn) {\n        const func = isOn ? 'on' : 'off';\n\n        cc.systemEvent[func](GameEvent.SCORE_GOT, this.onScoreGot, this);\n        cc.systemEvent[func](GameEvent.PLAYER_MOVED, this.onPlayerMoved, this);\n        cc.systemEvent[func](GameEvent.CHECK_SCORES_FOR_ABILITY, this.onCheckScoreForAbility, this);\n        cc.systemEvent[func](GameEvent.TOGGLE_SUPER_ABILITY, this.onToggleSuperAbility, this);\n        cc.systemEvent[func](GameEvent.SHOW_SCREEN, this.onShowScreen, this);\n    },\n\n    _createNewLevel() {\n        this._level += 1;\n        this._steps = 21 - this._level;\n        if (this._steps < 10) this._steps = 10;\n        this._localScores = 18 + Math.ceil(this._level * 2);\n        this._needingScores = this._localScores;\n        this.level.string = this._level;\n        this.localScores.string = this._localScores;\n        this.steps.string = this._steps;\n        this.progress.width = 0;\n    },\n\n    _checkForScores(scores, comparedValue) {\n        if (scores >= comparedValue) return true;\n        return false;\n    },\n\n    //#endregion\n\n    //#region event handlers\n    onScoreGot(scores) {\n        if (this._isStopAdding) return;\n        this._localScores -= scores;\n        this._totalScores += scores;\n        this.totalScores.string = this._totalScores;\n\n        if (this._checkForScores(this._totalScores, 10)) cc.systemEvent.emit(GameEvent.BOMB_IS_AVAILABLE, true);\n\n        if (this._localScores < 1) {\n            cc.systemEvent.emit(GameEvent.SHOW_SCREEN, UiScreenType.Result, true, true);\n            this._createNewLevel();\n        } else {\n            this.localScores.string = this._localScores;\n            pg.tweenManager.add(this.progress, { width: 1500 * ((this._needingScores - this._localScores) / this._needingScores) }, 0.2);\n        }\n    },\n\n    onPlayerMoved() {\n        this._isStopAdding = false;\n        this._steps -= 1;\n        if (this._steps < 1) {\n            cc.systemEvent.emit(GameEvent.SHOW_SCREEN, UiScreenType.Result, true, false);\n        } else {\n            this.steps.string = this._steps;\n        }\n    },\n\n    onCheckScoreForAbility(kindSuperAbility) {\n        if (!this._canCheckForScoresAbility) return;\n        \n        let isAvailable = false;\n        switch (kindSuperAbility) {\n            case BlockColorType.Bomb:\n                if (this._totalScores >= 10) {\n                    isAvailable = true;\n                    this._totalScores -= 10;\n                    if (!this._checkForScores(this._totalScores, 10)) cc.systemEvent.emit(GameEvent.BOMB_IS_AVAILABLE, false);\n                }\n                break;\n            case BlockColorType.Teleport:\n                if (this._totalScores >= 11) {\n                    isAvailable = true;\n                    this._totalScores -= 11;\n                }\n                break;\n    \n            case BombType.Tnt:\n                if (this._totalScores >= 30000) {\n                    isAvailable = true;\n                    this._totalScores -= 30000;\n                }\n                break;\n        }\n        if (isAvailable) {\n            cc.systemEvent.emit(GameEvent.CREATE_SUPER_ABILITY, kindSuperAbility);\n            this.totalScores.string = this._totalScores;\n        }\n    },\n\n    onToggleSuperAbility(isOn) {\n        this._canCheckForScoresAbility = isOn;\n    },\n\n    onShowScreen(typeScreen, isShow, isWin = true) {\n        this._isStopAdding = true;\n        if (isWin) return;\n        this._level = 0;\n        this._totalScores = 0;\n        this.totalScores.string = this._totalScores;\n        this._localScores = 0;\n        this._createNewLevel();\n    },\n    //#endregion\n});\n"]}