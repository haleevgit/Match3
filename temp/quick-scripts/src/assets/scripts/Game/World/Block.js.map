{"version":3,"sources":["assets/scripts/Game/World/Block.js"],"names":["cc","Class","Component","properties","blue","type","SpriteFrame","green","purple","red","yellow","inputCatcher","Node","superAbility","bombAbility","tntAbility","_elementaryTransfer","serializable","_sprite","_superAbility","BombType","None","_choosingTeleportAnimation","_acceptedTeleportAnimation","_initialScale","v2","onEnable","_handleSubscription","node","getComponent","Sprite","transferred","x","scaleX","y","scaleY","_chooseBlockColor","onDisable","isOn","func","systemEvent","GameEvent","TIME_TO_FALL","onTimeToFall","CHOOSE_COLOR_BLOCK","onChooseColorBlock","BLOCK_BOMB_DONE","onBlockBombChosen","COLUMN_ERASER_DONE","onColumnEraserDone","CREATE_SUPER_BLOCK","onCreateSuperBlock","CHANGE_BLOCK_ANIMATION","onChangeBlockAnimation","START_TELEPORTATION","onStartTeleportation","kind","BlockColorType","Blue","spriteFrame","Green","Purple","Red","Yellow","_stopBlockAnimation","Animation","stop","rotation","opacity","pg","tweenManager","add","onComplete","emit","BLOCK_FALL","id","active","kindAbility","frameAbility","Bomb","scale","ColumnEraser","coords","animationType","iI","iJ","animationName","TeleportAnimationsType","Choosing","Accepted","play","first","second","firstCoord","secondCoord","isTeleportNeeded","coordTransfer","TELEPORTATION_COMPLETE"],"mappings":"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","sourceRoot":"/","sourcesContent":["//#region classes-helpers\nimport GameEvent from 'GameEvent';\nimport BlockColorType from 'BlockColorType';\nimport InputDirection from 'InputDirection';\nimport BombType from 'BombType';\nimport TeleportAnimationsType from '../Enums/TeleportAnimationsType';\n//#endregion\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //#region editors fields and properties\n        blue: { default: null, type: cc.SpriteFrame },\n        green: { default: null, type: cc.SpriteFrame },\n        purple: { default: null, type: cc.SpriteFrame },\n        red: { default: null, type: cc.SpriteFrame },\n        yellow: { default: null, type: cc.SpriteFrame },\n        inputCatcher: { default: null, type: cc.Node },\n        superAbility: { default: null, type: cc.Node },\n        bombAbility: { default: null, type: cc.SpriteFrame },\n        tntAbility: { default: null, type: cc.SpriteFrame },\n        //#endregion\n\n        //#region public fields and properties\n        //#endregion\n\n        //#region private fields and properties\n        _elementaryTransfer: { default: 233, serializable: false },\n        _sprite: { default: null, serializable: false },\n        _superAbility: { default: BombType.None, serializable: false },\n        _choosingTeleportAnimation: {default: 'choosing_teleport'},\n        _acceptedTeleportAnimation: {default: 'accepted_teleport'},\n        _initialScale: { default: cc.v2(0,0), serializable: false },\n        //#endregion\n    },\n\n    //#region life-cycle callbacks\n\n    onEnable() {\n        this._handleSubscription(true);\n\n        this._sprite = this.node.getComponent(cc.Sprite);\n\n        this.node.transferred = 0;\n\n        this._initialScale.x = this.node.scaleX;  \n        this._initialScale.y = this.node.scaleY;\n\n        this._chooseBlockColor();\n\n    },\n\n    onDisable() {\n        this._handleSubscription(false);\n    },\n\n    _handleSubscription(isOn) {\n        const func = isOn ? 'on' : 'off';\n\n        cc.systemEvent[func](GameEvent.TIME_TO_FALL, this.onTimeToFall, this);\n        cc.systemEvent[func](GameEvent.CHOOSE_COLOR_BLOCK, this.onChooseColorBlock, this);\n        cc.systemEvent[func](GameEvent.BLOCK_BOMB_DONE, this.onBlockBombChosen, this);\n        cc.systemEvent[func](GameEvent.COLUMN_ERASER_DONE, this.onColumnEraserDone, this);\n        cc.systemEvent[func](GameEvent.CREATE_SUPER_BLOCK, this.onCreateSuperBlock, this);\n        cc.systemEvent[func](GameEvent.CHANGE_BLOCK_ANIMATION, this.onChangeBlockAnimation, this);\n        cc.systemEvent[func](GameEvent.START_TELEPORTATION, this.onStartTeleportation, this);\n    },\n\n    _chooseBlockColor() {\n        switch (this.node.kind) {\n            case BlockColorType.Blue:\n                this.node.getComponent(cc.Sprite).spriteFrame = this.blue;\n                this._sprite.spriteFrame = this.blue;\n                break;\n            case BlockColorType.Green:\n                this._sprite.spriteFrame = this.green;\n                break;\n            case BlockColorType.Purple:\n                this._sprite.spriteFrame = this.purple;\n                break;\n            case BlockColorType.Red:\n                this._sprite.spriteFrame = this.red;\n                break;\n            case BlockColorType.Yellow:\n                this._sprite.spriteFrame = this.yellow;\n                break;\n        }\n    },\n\n    _stopBlockAnimation() {\n        this.node.getComponent(cc.Animation).stop()\n        this.node.rotation = 0;\n        this.node.scaleX = this._initialScale.x;\n        this.node.scaleY = this._initialScale.y;\n    },\n\n    //#region event handlers\n    onTimeToFall() {\n        const transferred = this.node.transferred;\n        if (transferred > 0) {\n            this.node.opacity = 255;\n            pg.tweenManager.add(this.node, { y: this.node.y - this._elementaryTransfer * transferred }, 0.1 * transferred).onComplete =\n                () => {\n                    cc.systemEvent.emit(GameEvent.BLOCK_FALL, transferred);\n                };\n        }\n    },\n\n    onChooseColorBlock(id, kind) {\n        if (id !== this.node.id) return;\n        this.node.kind = kind;\n        this._chooseBlockColor();\n    },\n\n    onBlockBombChosen(id) {\n        if (this.node.id !== id) \n            return\n        this.superAbility.active = false;\n    },\n\n    onColumnEraserDone(id) {\n        if (this.node.id !== id) \n            return\n        this.superAbility.active = false;\n    },\n\n    onCreateSuperBlock(id, kindAbility) {\n        if (this.node.id !== id)\n            return;\n\n        let frameAbility = this.bombAbility;\n        switch (kindAbility) {\n            case BlockColorType.Bomb:\n                this.node.kind = BlockColorType.Bomb;\n                this.superAbility.scale *= 1.5;                \n                break;\n            case BlockColorType.ColumnEraser:\n                this.node.kind = BlockColorType.ColumnEraser;\n                frameAbility = this.tntAbility;\n                break;\n        }\n\n        this.superAbility.active = true;\n        this.superAbility.getComponent(cc.Sprite).spriteFrame = frameAbility;\n    },\n\n    onChangeBlockAnimation(coords, animationType) {\n        if(this.node.iI === coords.x && this.node.iJ === coords.y) {\n            let animationName;\n            switch (animationType) {\n                case TeleportAnimationsType.Choosing:\n                    animationName =  this._choosingTeleportAnimation;\n                    break;\n                case TeleportAnimationsType.Accepted:\n                    animationName =  this._acceptedTeleportAnimation;\n                    break;\n                case TeleportAnimationsType.None:\n                    this._stopBlockAnimation();\n                    return\n            }\n            this.node.getComponent(cc.Animation).play(animationName);\n        }    \n    },\n\n    onStartTeleportation(first, second, firstCoord, secondCoord) {\n        let isTeleportNeeded = false;\n        let coordTransfer = secondCoord;\n        if (this.node.id === first.id) {\n            isTeleportNeeded = true;\n        } else if (this.node.id === second.id) {\n            coordTransfer = firstCoord;\n            isTeleportNeeded = true;\n        }\n        if (isTeleportNeeded) {\n            this._stopBlockAnimation()\n            \n            pg.tweenManager.add(this.node, { y: coordTransfer.y, x: coordTransfer.x }, 0.1).onComplete =\n                () => {\n                    cc.systemEvent.emit(GameEvent.TELEPORTATION_COMPLETE);\n                };\n        }\n    }\n\n\n\n    //#endregion\n});\n"]}