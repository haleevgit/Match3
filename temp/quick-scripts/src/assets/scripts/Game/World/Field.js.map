{"version":3,"sources":["assets/scripts/Game/World/Field.js"],"names":["cc","Class","Component","properties","block","type","Prefab","mask","Node","inputCatcher","onEnable","_handleSubscription","systemEvent","emit","GameEvent","FIELD_ON","active","onDisable","isOn","func","STOP_INPUT","onStopInput","BLOCK_CAN_BE_CHOSEN","onBlockCanBeChosen"],"mappings":";;;;;;AACA;;;;AADA;AAEA;AAEAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACR;IACAC,KAAK,EAAE;MAAE,WAAS,IAAX;MAAiBC,IAAI,EAAEL,EAAE,CAACM;IAA1B,CAFC;IAGRC,IAAI,EAAE;MAAE,WAAS,IAAX;MAAiBF,IAAI,EAAEL,EAAE,CAACQ;IAA1B,CAHE;IAIRC,YAAY,EAAE;MAAE,WAAS,IAAX;MAAiBJ,IAAI,EAAEL,EAAE,CAACQ;IAA1B,CAJN,CAKR;IAEA;IACA;IAEA;IACA;;EAXQ,CAHP;EAiBL;EACAE,QAlBK,sBAkBM;IACP,KAAKC,mBAAL,CAAyB,IAAzB;;IACAX,EAAE,CAACY,WAAH,CAAeC,IAAf,CAAoBC,qBAAA,CAAUC,QAA9B,EAAwC,KAAKR,IAA7C,EAAmD,KAAKH,KAAxD;IACA,KAAKK,YAAL,CAAkBO,MAAlB,GAA2B,KAA3B;EACH,CAtBI;EAwBLC,SAxBK,uBAwBO;IACR,KAAKN,mBAAL,CAAyB,KAAzB;EACH,CA1BI;EA2BL;EAEA;EACA;EAEA;EACAA,mBAjCK,+BAiCeO,IAjCf,EAiCqB;IACtB,IAAMC,IAAI,GAAGD,IAAI,GAAG,IAAH,GAAU,KAA3B;IAEAlB,EAAE,CAACY,WAAH,CAAeO,IAAf,EAAqBL,qBAAA,CAAUM,UAA/B,EAA2C,KAAKC,WAAhD,EAA6D,IAA7D;IACArB,EAAE,CAACY,WAAH,CAAeO,IAAf,EAAqBL,qBAAA,CAAUQ,mBAA/B,EAAoD,KAAKC,kBAAzD,EAA6E,IAA7E;EACH,CAtCI;EAwCL;EAEA;EACAF,WA3CK,yBA2CS;IACV,KAAKZ,YAAL,CAAkBO,MAAlB,GAA2B,IAA3B;EACH,CA7CI;EA+CLO,kBA/CK,gCA+CgB;IACjB,KAAKd,YAAL,CAAkBO,MAAlB,GAA2B,KAA3B;EACH,CAjDI,CAkDL;;AAlDK,CAAT","sourceRoot":"/","sourcesContent":["//#region classes-helpers\nimport GameEvent from 'GameEvent';\n//#endregion\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //#region editors fields and properties\n        block: { default: null, type: cc.Prefab },\n        mask: { default: null, type: cc.Node },\n        inputCatcher: { default: null, type: cc.Node },\n        //#endregion\n\n        //#region public fields and properties\n        //#endregion\n\n        //#region private fields and properties\n        //#endregion\n    },\n\n    //#region life-cycle callbacks\n    onEnable() {\n        this._handleSubscription(true);\n        cc.systemEvent.emit(GameEvent.FIELD_ON, this.mask, this.block);\n        this.inputCatcher.active = false;\n    },\n\n    onDisable() {\n        this._handleSubscription(false);\n    },\n    //#endregion\n\n    //#region public methods\n    //#endregion\n\n    //#region private methods\n    _handleSubscription(isOn) {\n        const func = isOn ? 'on' : 'off';\n\n        cc.systemEvent[func](GameEvent.STOP_INPUT, this.onStopInput, this);\n        cc.systemEvent[func](GameEvent.BLOCK_CAN_BE_CHOSEN, this.onBlockCanBeChosen, this);\n    },\n\n    //#endregion\n\n    //#region event handlers\n    onStopInput() {\n        this.inputCatcher.active = true;\n    },\n\n    onBlockCanBeChosen() {\n        this.inputCatcher.active = false;\n    },\n    //#endregion\n});\n"]}