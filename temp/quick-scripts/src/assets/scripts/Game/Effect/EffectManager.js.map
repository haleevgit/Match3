{"version":3,"sources":["assets/scripts/Game/Effect/EffectManager.js"],"names":["cc","Class","Component","properties","PREVIEW","editorOnly","tooltip","effectType","EffectType","None","type","notify","_convertEffectType","indexOf","push","_effectPrefabs","effectPrefab","serializable","Prefab","visible","effectPrefabs","get","convertEffectType","_effectPools","_playingEffects","editor","menu","onLoad","Map","poolManager","pg","PoolManager","i","set","pool","poolForObject","parent","node","_handleSubscription","isOn","func","systemEvent","GameEvent","SPAWN_EFFECT","onSpawnEffect","GET_PLAYING_EFFECTS","onGetPlayingEffects","_getDeactivateTime","isLoop","maxDeactivation","emitters","length","emitter","duration","life","delay","valueType","ParticleValue","ValueType","Value","value","max","maxParticleLife","lifetime","totalDeactivateTime","Math","effectName","config","preAction","key","poolData","effect","pop","property","effectParent","emit","GET_GAME_OBJECT_PARENT","getComponent","order","particleManager","playingEffectsMap","deactivateTime","has","scheduleOnce","stop","particleManagers","managerIndex","splice","play","callback","Function","playingParticleManagersMap"],"mappings":"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","sourceRoot":"/","sourcesContent":["import GameEvent from 'GameEvent';\n\nimport EffectType from 'EffectType';\n\n//#region classes-helpers\n//#endregion\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //#region editors fields and properties\n        PREVIEW: {\n            default: false,\n            editorOnly: true,\n            tooltip: 'показать все типы эффектов и префабы к ним',\n        },\n\n        effectType: {\n            default: EffectType.None,\n            type: EffectType,\n            notify() {\n                if (this.effectType !== EffectType.None) {\n                    if (this._convertEffectType.indexOf(this.effectType) === -1) {\n                        this._convertEffectType.push(this.effectType);\n                        this._effectPrefabs.push(null);\n                    }\n                    this.effectPrefab = this._effectPrefabs[this._convertEffectType.indexOf(this.effectType)];\n                }\n            },\n            serializable: false,\n            tooltip: 'тип эффекта для привязки префаба',\n        },\n\n        effectPrefab: {\n            default: null,\n            type: cc.Prefab,\n            notify() {\n                if (this.effectType !== EffectType.None && (this.effectPrefab instanceof cc.Prefab || this.effectPrefab === null)) {\n                    this._effectPrefabs[this._convertEffectType.indexOf(this.effectType)] = this.effectPrefab;\n                }\n            },\n\n            visible() {\n                return this.effectType !== EffectType.None;\n            },\n            serializable: false,\n            tooltip: 'префаб эффекта',\n        },\n\n        effectPrefabs: {\n            get() {\n                return this._effectPrefabs;\n            },\n            type: [cc.Prefab],\n            visible() {\n                return this.PREVIEW;\n            },\n        },\n\n        convertEffectType: {\n            get() {\n                return this._convertEffectType;\n            },\n            type: [EffectType],\n            visible() {\n                return this.PREVIEW;\n            },\n        },\n        //#endregion\n        //#region public fields and properties\n        //#endregion\n\n        //#region private fields and properties\n        _effectPrefabs: { default: [], type: [cc.Prefab] },\n        _convertEffectType: { default: [], type: [EffectType] },\n\n        _effectPools: { default: null, serializable: false },\n        _playingEffects: { default: null, serializable: false },\n        //#endregion\n    },\n\n    editor: {\n        menu: 'ParticleEffects/EffectManager',\n    },\n\n    //#region life-cycle callbacks\n    onLoad() {\n        this._effectPools = new Map();\n        this._playingEffects = new Map();\n\n        const poolManager = pg.poolManager || new pg.PoolManager();\n\n        for (let i in this._convertEffectType) {\n            this._effectPools.set(this._convertEffectType[i], {\n                pool: poolManager.poolForObject(this._effectPrefabs[i], {\n                    parent: this.node,\n                }),\n            });\n\n            this._playingEffects.set(this._convertEffectType[i], new Map().set('default', []));\n        }\n\n        this._handleSubscription(true);\n    },\n\n    //#endregion\n\n    //#region public methods\n    //#endregion\n\n    //#region private methods\n    _handleSubscription(isOn) {\n        const func = isOn ? 'on' : 'off';\n\n        cc.systemEvent[func](GameEvent.SPAWN_EFFECT, this.onSpawnEffect, this);\n        cc.systemEvent[func](GameEvent.GET_PLAYING_EFFECTS, this.onGetPlayingEffects, this);\n    },\n\n    _getDeactivateTime(poolManager) {\n        let isLoop = false;\n        let maxDeactivation = 0;\n\n        const emitters = poolManager.emitters;\n\n        for (let i = 0; i < emitters.length; i++) {\n            const emitter = emitters[i];\n            const duration = emitter.life.duration;\n            const delay =\n                emitter.life.delay.valueType === pg.ParticleValue.ValueType.Value ? emitter.life.delay.value : emitter.life.delay.value.max;\n            const maxParticleLife =\n                emitter.life.lifetime.valueType === pg.ParticleValue.ValueType.Value\n                    ? emitter.life.lifetime.value\n                    : emitter.life.lifetime.value.max;\n            const totalDeactivateTime = duration + delay + maxParticleLife;\n\n            isLoop = isLoop || emitter.life.isLoop;\n            maxDeactivation = Math.max(maxDeactivation, totalDeactivateTime);\n        }\n\n        return isLoop ? -1 : maxDeactivation;\n    },\n    //#endregion\n\n    //#region event handlers\n    onSpawnEffect(effectName, config, preAction, key = null) {\n        const poolData = this._effectPools.get(effectName);\n        if (poolData) {\n            const pool = poolData.pool;\n            const effect = pool.pop(preAction);\n\n            for (let property in config) {\n                effect[property] = config[property];\n            }\n\n            let effectParent;\n\n            cc.systemEvent.emit(GameEvent.GET_GAME_OBJECT_PARENT, effect.getComponent('Effect').order, (parent) => {\n                effectParent = parent;\n            });\n\n            effect.parent = effectParent;\n\n            const particleManager = effect.getComponent('ParticleManager');\n\n            if (particleManager) {\n                const playingEffectsMap = this._playingEffects.get(effectName);\n                const deactivateTime = this._getDeactivateTime(particleManager);\n\n                if (key) {\n                    if (playingEffectsMap.has(key)) {\n                        playingEffectsMap.get(key).push(particleManager);\n                    } else {\n                        playingEffectsMap.set(key, [particleManager]);\n                    }\n                } else {\n                    playingEffectsMap.get('default').push(particleManager);\n                }\n\n                deactivateTime >= 0 &&\n                    this.scheduleOnce(() => {\n                        if (pool) {\n                            pool.push(effect);\n                            particleManager.stop();\n                            let particleManagers = playingEffectsMap.get(key || 'default');\n                            let managerIndex = particleManagers.indexOf(particleManager);\n\n                            if (managerIndex > -1) {\n                                particleManagers.splice(managerIndex, 1);\n                            }\n                        }\n                    }, deactivateTime);\n\n                particleManager.play();\n            }\n        }\n    },\n\n    onGetPlayingEffects(effectName, callback) {\n        if (callback instanceof Function && this._playingEffects.has(effectName)) {\n            let playingParticleManagersMap = this._playingEffects.get(effectName);\n            callback(playingParticleManagersMap);\n        }\n    },\n\n    //#endregion\n});\n"]}