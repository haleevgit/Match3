{"version":3,"sources":["assets/scripts/Plugins/Input/Commands/IInputCommand.js"],"names":["IInputCommand","manager","node","touches","_currentTouch","onDown","touch","place","target","onMove","onUp","createTouchInfo","touchInfo","id","_id","down","getTouchInfo","last","current","indexOf","length","push","__id","refreshTouchInfo","findTouch","destroyTouch","location","getLocation","position","clone","worldPosition","cc","Camera","main","getScreenToWorldPoint","convertToNodeSpaceAR","time"],"mappings":";;;;;;;;;IAAqBA;EACjB,uBAAYC,OAAZ,EAAqB;IACjB,KAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;IACA,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKE,OAAL,GAAeF,OAAO,CAACE,OAAvB;IAEA,KAAKC,aAAL,GAAqB,IAArB;EACH;;;;SAEDC,SAAA,gBAAOC,KAAP,EAAcC,KAAd,EAAqBC,MAArB,EAA6B,CAAE;;SAC/BC,SAAA,gBAAOH,KAAP,EAAcC,KAAd,EAAqBC,MAArB,EAA6B,CAAE;;SAC/BE,OAAA,cAAKJ,KAAL,EAAYC,KAAZ,EAAmBC,MAAnB,EAA2B,CAAE;;SAE7BG,kBAAA,yBAAgBL,KAAhB,EAAuBC,KAAvB,EAA8B;IAC1B,IAAMK,SAAS,GAAG;MACdC,EAAE,EAAEP,KAAK,CAACQ,GADI;MAEdC,IAAI,EAAE,KAAKC,YAAL,CAAkBV,KAAlB,EAAyBC,KAAzB,CAFQ;MAGdU,IAAI,EAAE,KAAKD,YAAL,CAAkBV,KAAlB,EAAyBC,KAAzB,CAHQ;MAIdW,OAAO,EAAE,KAAKF,YAAL,CAAkBV,KAAlB,EAAyBC,KAAzB;IAJK,CAAlB;IAOA,IAAIM,EAAE,GAAG,KAAKV,OAAL,CAAagB,OAAb,CAAqB,IAArB,CAAT;;IAEA,IAAIN,EAAE,KAAK,CAAC,CAAZ,EAAe;MACXA,EAAE,GAAG,KAAKV,OAAL,CAAaiB,MAAlB;MAEA,KAAKjB,OAAL,CAAakB,IAAb,CAAkB,IAAlB;IACH;;IAEDf,KAAK,CAACgB,IAAN,GAAaT,EAAb;IAEA,KAAKV,OAAL,CAAaU,EAAb,IAAmBD,SAAnB;IACA,OAAOA,SAAP;EACH;;SAEDW,mBAAA,0BAAiBX,SAAjB,EAA4BN,KAA5B,EAAmCC,KAAnC,EAA0C;IACtCK,SAAS,CAACK,IAAV,GAAiBL,SAAS,CAACM,OAA3B;IACAN,SAAS,CAACM,OAAV,GAAoB,KAAKF,YAAL,CAAkBV,KAAlB,EAAyBC,KAAzB,CAApB;EACH;;SAEDiB,YAAA,mBAAUlB,KAAV,EAAiB;IACb,OAAO,KAAKH,OAAL,CAAaG,KAAK,CAACgB,IAAnB,CAAP;EACH;;SAEDG,eAAA,sBAAanB,KAAb,EAAoB;IAChB,KAAKH,OAAL,CAAaG,KAAK,CAACgB,IAAnB,IAA2B,IAA3B;EACH;;SAEDN,eAAA,sBAAaV,KAAb,EAAoBC,KAApB,EAA2B;IACvB,IAAMmB,QAAQ,GAAGpB,KAAK,CAACqB,WAAN,EAAjB;IACA,IAAIC,QAAQ,GAAGF,QAAQ,CAACG,KAAT,EAAf;IACA,IAAIC,aAAa,GAAGC,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,qBAAf,CAAqC5B,KAAK,CAACqB,WAAN,EAArC,CAApB;IAEAC,QAAQ,GAAG,KAAK1B,IAAL,CAAUiC,oBAAV,CAA+BL,aAA/B,CAAX;IAEA,OAAO;MACHM,IAAI,EAAE,KAAKnC,OAAL,CAAamC,IADhB;MAEHV,QAAQ,EAARA,QAFG;MAGHE,QAAQ,EAARA,QAHG;MAIHE,aAAa,EAAbA;IAJG,CAAP;EAMH","sourceRoot":"/","sourcesContent":["export default class IInputCommand {\n    constructor(manager) {\n        this.node = manager.node;\n        this.manager = manager;\n        this.touches = manager.touches;\n\n        this._currentTouch = null;\n    }\n\n    onDown(touch, place, target) {}\n    onMove(touch, place, target) {}\n    onUp(touch, place, target) {}\n\n    createTouchInfo(touch, place) {\n        const touchInfo = {\n            id: touch._id,\n            down: this.getTouchInfo(touch, place),\n            last: this.getTouchInfo(touch, place),\n            current: this.getTouchInfo(touch, place),\n        };\n\n        let id = this.touches.indexOf(null);\n\n        if (id === -1) {\n            id = this.touches.length;\n\n            this.touches.push(null);\n        }\n\n        touch.__id = id;\n\n        this.touches[id] = touchInfo;\n        return touchInfo;\n    }\n\n    refreshTouchInfo(touchInfo, touch, place) {\n        touchInfo.last = touchInfo.current;\n        touchInfo.current = this.getTouchInfo(touch, place);\n    }\n\n    findTouch(touch) {\n        return this.touches[touch.__id];\n    }\n\n    destroyTouch(touch) {\n        this.touches[touch.__id] = null;\n    }\n\n    getTouchInfo(touch, place) {\n        const location = touch.getLocation();\n        let position = location.clone();\n        let worldPosition = cc.Camera.main.getScreenToWorldPoint(touch.getLocation());\n\n        position = this.node.convertToNodeSpaceAR(worldPosition);\n\n        return {\n            time: this.manager.time,\n            location,\n            position,\n            worldPosition,\n        };\n    }\n}\n"]}