{"version":3,"sources":["assets/scripts/Plugins/Input/InputManager.js"],"names":["cc","Class","Component","properties","checkUserSleep","tooltip","tutorialTimeout","time","get","_time","visible","commands","serializable","_isFirstTap","_userSleepTime","_isInput","_isSleep","editor","menu","onLoad","systemEvent","on","GameEvent","INPUT","onInput","InputDirection","GameArea","GameAreaInputCommand","BombShop","BombShopInputCommand","TeleportShop","TeleportShopInputCommand","TntShop","TntShopInputCommand","IngameButton","IngameButtonInputCommand","FakeScreen","FakeScreenInputCommand","CrossPromoCross","CrossPromoInputCommand","Block","BlockInputCommand","type","area","touch","place","target","command","InputType","Down","onDown","emit","FIRST_TAP","Move","onMove","Up","onUp"],"mappings":"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","sourceRoot":"/","sourcesContent":["import GameEvent from 'GameEvent';\n\nimport InputDirection from 'InputDirection';\nimport InputType from 'InputType';\n\nimport IInputCommand from 'IInputCommand';\nimport GameAreaInputCommand from 'GameAreaInputCommand';\nimport BombShopInputCommand from 'BombShopInputCommand';\nimport TeleportShopInputCommand from 'TeleportShopInputCommand';\nimport TntShopInputCommand from 'TntShopInputCommand';\nimport IngameButtonInputCommand from 'IngameButtonInputCommand';\nimport FakeScreenInputCommand from 'FakeScreenInputCommand';\nimport CrossPromoInputCommand from 'CrossPromoInputCommand';\nimport BlockInputCommand from 'BlockInputCommand';\n\n//#region classes-helpers\n//#endregion\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //#region editors fields and properties\n        checkUserSleep: {\n            default: true,\n            tooltip: 'следить за бездействием игрока?',\n        },\n        tutorialTimeout: {\n            default: 3,\n            tooltip: 'временной интевал (сек), по истечении которого запустится обучение',\n        },\n        //#endregion\n\n        //#region public fields and properties\n        time: {\n            get() {\n                return this._time;\n            },\n            visible: false,\n        },\n        //#endregion\n\n        //#region private fields and properties\n        commands: { default: {}, visible: false, serializable: false },\n\n        _isFirstTap: { default: true, serializable: false },\n        _userSleepTime: { default: 0, serializable: false },\n\n        _time: { default: 0, serializable: false },\n        _isInput: { default: false, serializable: false },\n\n        _isSleep: { default: false, serializable: false },\n        //#endregion\n    },\n\n    editor: {\n        menu: 'Input/InputManager',\n    },\n\n    //#region life-cycle callbacks\n    onLoad() {\n        cc.systemEvent.on(GameEvent.INPUT, this.onInput, this);\n\n        this.commands[InputDirection.GameArea] = new GameAreaInputCommand(this);\n        this.commands[InputDirection.BombShop] = new BombShopInputCommand(this);\n        this.commands[InputDirection.TeleportShop] = new TeleportShopInputCommand(this);\n        this.commands[InputDirection.TntShop] = new TntShopInputCommand(this);\n        this.commands[InputDirection.IngameButton] = new IngameButtonInputCommand(this);\n        this.commands[InputDirection.FakeScreen] = new FakeScreenInputCommand(this);\n        this.commands[InputDirection.CrossPromoCross] = new CrossPromoInputCommand(this);\n        this.commands[InputDirection.Block] = new BlockInputCommand(this);\n    },\n\n    //#endregion\n\n    //#region public methods\n    //#endregion\n\n    //#region private methods\n\n    //#endregion\n\n    //#region event handlers\n    onInput(type, area, touch, place, target) {\n        const command = this.commands[area];\n\n        this._userSleepTime = 0;\n        this._isSleep = false;\n\n        switch (type) {\n            case InputType.Down:\n                if (command) {\n                    command.onDown(touch, place, target);\n                }\n\n                if (this._isFirstTap) {\n                    this._isFirstTap = false;\n                    cc.systemEvent.emit(GameEvent.FIRST_TAP);\n                }\n\n                this._isInput = true;\n                break;\n\n            case InputType.Move:\n                if (command) {\n                    command.onMove(touch, place, target);\n                }\n                break;\n\n            case InputType.Up:\n                if (command) {\n                    command.onUp(touch, place, target);\n                    this._isSleep = true;\n                    this._isInput = false;\n                }\n                break;\n        }\n    },\n\n    onDown(area, touch, place, target) {},\n    onMove(area, touch, place, target) {},\n    onUp(area, touch, place, target) {},\n    //#endregion\n});\n"]}